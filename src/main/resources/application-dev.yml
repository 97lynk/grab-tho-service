
# DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
spring:
  datasource:
    url: jdbc:mysql://localhost:3306/demo_auth?useSSL=false&characterEncoding=utf8&createDatabaseIfNotExist=true
    username: root
    password: 123456
#  initialization-mode: always
# Hibernate
# The SQL dialect makes Hibernate generate better SQL for the chosen database
  jpa:
    properties.hibernate.dialect: org.hibernate.dialect.MySQL5InnoDBDialect
#Flyway
#spring.flyway.baselineOnMigrate=true
# Hibernate ddl auto (create, create-drop, validate, update)
    hibernate.ddl-auto: update
#logging.level.org.hibernate.SQL=DEBUG
#logging.level.org.hibernate.type=TRACE
## MULTIPART (MultipartProperties)
# Enable multipart uploads
  servlet.multipart:
    enabled: true
# Threshold after which files are written to disk.
    file-size-threshold: 2KB
# Max file size.
    max-file-size: 200MB
# Max Request Size
    max-request-size: 215MB
#spring.servlet.multipart.location=D:/temp



#============= OAuth2 config ====================
oauth2:
  client-id: clientIdPassword
  client-secret: 123
  grand-types: password,refresh_token,authorization_code
  scopes: read
  access-token-expire-in: 3600
  refresh-token-expire-in: 7200

#=========== Java Key Store config ===============
key:
  file-name: kt3key.jks
  file-password: hdkey@
  alias: oauth2
  alias-password: hdkt3!

spring.social.facebook.appId: 548596522582041
spring.social.facebook.appSecret: 0bcd0685c74331223d47294185d01157

file.upload-dir: /images

server.host: 'http://localhost:8080'
server:
  ssl:
    key-store-type: JKS
    key-store: classpath:kt3key.jks
    key-store-password: hdkey@
    key-alias: oauth2
    key-password: hdkt3!